// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace AtkSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate void EventListenerInitNative();

	internal class EventListenerInitWrapper {

		public void NativeCallback ()
		{
			try {
				managed ();
				if (release_on_call)
					gch.Free ();
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		bool release_on_call = false;
		GCHandle gch;

		public void PersistUntilCalled ()
		{
			release_on_call = true;
			gch = GCHandle.Alloc (this);
		}

		internal readonly EventListenerInitNative NativeDelegate;
		Atk.EventListenerInit managed;

		public EventListenerInitWrapper (Atk.EventListenerInit managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new EventListenerInitNative (NativeCallback);
		}

	}
#endregion
}
