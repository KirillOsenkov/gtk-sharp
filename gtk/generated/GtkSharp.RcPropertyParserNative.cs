// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GtkSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate bool RcPropertyParserNative(IntPtr pspec, IntPtr rc_string, ref GLib.Value property_value);

	internal class RcPropertyParserWrapper {

		public bool NativeCallback (IntPtr pspec, IntPtr rc_string, ref GLib.Value property_value)
		{
			try {
				bool __ret = managed (pspec, GLib.GString.PtrToString (rc_string), property_value);
				return __ret;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
				return false;
			}
		}


		internal readonly RcPropertyParserNative NativeDelegate;
		Gtk.RcPropertyParser managed;

		public RcPropertyParserWrapper (Gtk.RcPropertyParser managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new RcPropertyParserNative (NativeCallback);
		}

	}
#endregion
}
