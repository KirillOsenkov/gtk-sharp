// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GtkSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate void DestroyNotifyNative(IntPtr data);

	internal class DestroyNotifyWrapper {

		public static void NativeCallback (IntPtr data)
		{
			try {
				var gch = (GCHandle)data;
				var wrapper = (DestroyNotifyWrapper)gch.Target;
				wrapper.managed ();
				if (wrapper.release_on_call)
					gch.Free ();
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		bool release_on_call = false;

		public GCHandle PersistUntilCalled ()
		{
			release_on_call = true;
			return GCHandle.Alloc (this);
		}

		internal static readonly DestroyNotifyNative NativeDelegate = new DestroyNotifyNative (NativeCallback);
		Gtk.DestroyNotify managed;

		public DestroyNotifyWrapper (Gtk.DestroyNotify managed)
		{
			this.managed = managed;
		}

	}
#endregion
}
