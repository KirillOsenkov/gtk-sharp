// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GtkSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate void MenuDetachFuncNative(IntPtr attach_widget, IntPtr menu);

	internal class MenuDetachFuncWrapper {

		public void NativeCallback (IntPtr attach_widget, IntPtr menu)
		{
			try {
				managed (GLib.Object.GetObject(attach_widget) as Gtk.Widget, GLib.Object.GetObject(menu) as Gtk.Menu);
				if (release_on_call)
					gch.Free ();
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		bool release_on_call = false;
		GCHandle gch;

		public void PersistUntilCalled ()
		{
			release_on_call = true;
			gch = GCHandle.Alloc (this);
		}

		internal readonly MenuDetachFuncNative NativeDelegate;
		Gtk.MenuDetachFunc managed;

		public MenuDetachFuncWrapper (Gtk.MenuDetachFunc managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new MenuDetachFuncNative (NativeCallback);
		}

	}
#endregion
}
