// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;

#region Autogenerated code
	public interface TreeModel : GLib.IWrapper {

		event Gtk.RowChangedHandler RowChanged;
		event Gtk.RowInsertedHandler RowInserted;
		event Gtk.RowHasChildToggledHandler RowHasChildToggled;
		event Gtk.RowDeletedHandler RowDeleted;
		void Foreach(Gtk.TreeModelForeachFunc func);
		GLib.GType GetColumnType(int index_);
		Gtk.TreeModelFlags Flags { 
			get;
		}
		bool GetIter(out Gtk.TreeIter iter, Gtk.TreePath path);
		bool GetIterFirst(out Gtk.TreeIter iter);
		bool GetIterFromString(out Gtk.TreeIter iter, string path_string);
		int NColumns { 
			get;
		}
		Gtk.TreePath GetPath(Gtk.TreeIter iter);
		string GetStringFromIter(Gtk.TreeIter iter);
		void GetValist(Gtk.TreeIter iter, IntPtr var_args);
		void GetValue(Gtk.TreeIter iter, int column, ref GLib.Value value);
		bool IterChildren(out Gtk.TreeIter iter, Gtk.TreeIter parent);
		bool IterHasChild(Gtk.TreeIter iter);
		int IterNChildren(Gtk.TreeIter iter);
		bool IterNext(ref Gtk.TreeIter iter);
		bool IterNthChild(out Gtk.TreeIter iter, Gtk.TreeIter parent, int n);
		bool IterParent(out Gtk.TreeIter iter, Gtk.TreeIter child);
		void RefNode(Gtk.TreeIter iter);
		void EmitRowChanged(Gtk.TreePath path, Gtk.TreeIter iter);
		void EmitRowDeleted(Gtk.TreePath path);
		void EmitRowHasChildToggled(Gtk.TreePath path, Gtk.TreeIter iter);
		void EmitRowInserted(Gtk.TreePath path, Gtk.TreeIter iter);
		void EmitRowsReordered(Gtk.TreePath path, Gtk.TreeIter iter, int[] new_order);
		void UnrefNode(Gtk.TreeIter iter);
#region Customized extensions
#line 1 "TreeModel.custom"
// Gtk.TreeModel.Custom - Gtk TreeModel interface customizations
//
// Author: Kristian Rietveld <kris@gtk.org>
//
// Copyright (c) 2002 Kristian Rietveld
//
// This code is inserted after the automatically generated code.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.


	/// <summary>IterChildren Method</summary>
	/// <remarks>To be completed</remarks>
	bool IterChildren (out Gtk.TreeIter iter);

	/// <summary>IterNChildren Method</summary>
	/// <remarks>To be completed</remarks>
	int IterNChildren ();

	/// <summary>IterNthChild Method</summary>
	/// <remarks>To be completed</remarks>
	bool IterNthChild (out Gtk.TreeIter iter, int n);

        void SetValue (Gtk.TreeIter iter, int column, bool value);
        void SetValue (Gtk.TreeIter iter, int column, double value);
	void SetValue (Gtk.TreeIter iter, int column, int value);
	void SetValue (Gtk.TreeIter iter, int column, string value);
	void SetValue (Gtk.TreeIter iter, int column, float value);
	void SetValue (Gtk.TreeIter iter, int column, uint value);
	void SetValue (Gtk.TreeIter iter, int column, object value);
	object GetValue(Gtk.TreeIter iter, int column);

	event RowsReorderedHandler RowsReordered;

#endregion
	}

	[GLib.GInterface (typeof (TreeModelAdapter))]
	public interface TreeModelImplementor : GLib.IWrapper {

		Gtk.TreeModelFlags Flags { get; }
		int NColumns { get; }
		GLib.GType GetColumnType (int index_);
		bool GetIter (out Gtk.TreeIter iter, Gtk.TreePath path);
		Gtk.TreePath GetPath (Gtk.TreeIter iter);
		void GetValue (Gtk.TreeIter iter, int column, ref GLib.Value value);
		bool IterNext (ref Gtk.TreeIter iter);
		bool IterChildren (out Gtk.TreeIter iter, Gtk.TreeIter parent);
		bool IterHasChild (Gtk.TreeIter iter);
		int IterNChildren (Gtk.TreeIter iter);
		bool IterNthChild (out Gtk.TreeIter iter, Gtk.TreeIter parent, int n);
		bool IterParent (out Gtk.TreeIter iter, Gtk.TreeIter child);
		void RefNode (Gtk.TreeIter iter);
		void UnrefNode (Gtk.TreeIter iter);
	}
#endregion
}
