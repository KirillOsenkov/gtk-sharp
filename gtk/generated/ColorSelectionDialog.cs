// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[ColorSelectionDialog]
	public class ColorSelectionDialog : Gtk.Dialog {

		[Obsolete]
		protected ColorSelectionDialog(GLib.GType gtype) : base(gtype) {}
		public ColorSelectionDialog(IntPtr raw) : base(raw) {}

		[DllImport("libgtk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_color_selection_dialog_new(IntPtr title);

		public ColorSelectionDialog (string title) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (ColorSelectionDialog)) {
				Gtk.Application.AssertMainThread();
				unsafe {
					var vals = stackalloc GLib.Value[1];
					var names = stackalloc IntPtr[1];
					names[0] = GLib.Marshaller.StringToPtrGStrdup ("title");
					vals[0] = new GLib.Value (title);
					CreateNativeObject (names, vals, 1);
				}
				return;
			}
			Gtk.Application.AssertMainThread();
			IntPtr native_title = GLib.Marshaller.StringToPtrGStrdup (title);
			owned = true;
			Raw = gtk_color_selection_dialog_new(native_title);
			GLib.Marshaller.Free (native_title);
		}

		[DllImport("libgtk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_color_selection_dialog_get_type();

		static GLib.GType _gtype = new GLib.GType (gtk_color_selection_dialog_get_type());
		public static new GLib.GType GType { 
			get {
								return _gtype;
			}
		}

#endregion
#region Customized extensions
#line 1 "ColorSelectionDialog.custom"
// Gtk.ColorSelectionDialog.custom - Gtk ColorSelectionDialog class customizations
//
// Author: Duncan Mak  (duncan@ximian.com)
//
// Copyright (C) 2002 Ximian, Inc. 
//
// This code is inserted after the automatically generated code.
//
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.


[Obsolete ("Do not use this class. It will cause your app to crash in mysterious ways.")]
public class ColorSelectionButton : Gtk.Button {
	private ColorSelectionDialog color_sel;

	public ColorSelectionDialog ColorSelectionDialog {
		get { return color_sel; }
	}

	public ColorSelectionButton (ColorSelectionDialog cs, IntPtr raw) : base (raw) {
		color_sel = cs;
	}
}

[DllImport("gtksharpglue-2", CallingConvention=CallingConvention.Cdecl)]
static extern IntPtr gtksharp_color_selection_dialog_get_colorsel (IntPtr i);
public ColorSelection ColorSelection {
       get { return GLib.Object.GetObject (gtksharp_color_selection_dialog_get_colorsel (this.Handle), false) as ColorSelection; }
}

[DllImport("gtksharpglue-2", CallingConvention=CallingConvention.Cdecl)]
static extern IntPtr gtksharp_color_selection_dialog_get_ok_button (IntPtr i);
public Button OkButton {
       get { return GLib.Object.GetObject (gtksharp_color_selection_dialog_get_ok_button (this.Handle), false) as Button; }
}

[DllImport("gtksharpglue-2", CallingConvention=CallingConvention.Cdecl)]
static extern IntPtr gtksharp_color_selection_dialog_get_cancel_button (IntPtr i);
public Button CancelButton {
       get { return GLib.Object.GetObject (gtksharp_color_selection_dialog_get_cancel_button (this.Handle), false) as Button; }
}

[DllImport("gtksharpglue-2", CallingConvention=CallingConvention.Cdecl)]
static extern IntPtr gtksharp_color_selection_dialog_get_help_button (IntPtr i);
public Button HelpButton {
       get { return GLib.Object.GetObject (gtksharp_color_selection_dialog_get_help_button (this.Handle), false) as Button; }
}


#endregion
	}

	internal class ColorSelectionDialogAttribute : GLib.GTypeTypeAttribute {
		[DllImport ("libgtk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_color_selection_dialog_get_type ();

		private static GLib.GType _gtype = new GLib.GType (gtk_color_selection_dialog_get_type ());
		public static GLib.GType GType { get { return _gtype; } }
		public override GLib.GType Type { get { return _gtype; } }

	}
}
