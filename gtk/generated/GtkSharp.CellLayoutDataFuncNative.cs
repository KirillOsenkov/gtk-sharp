// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GtkSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate void CellLayoutDataFuncNative(IntPtr cell_layout, IntPtr cell, IntPtr tree_model, IntPtr iter, IntPtr data);

	internal class CellLayoutDataFuncInvoker {

		CellLayoutDataFuncNative native_cb;
		IntPtr __data;
		GLib.DestroyNotify __notify;

		~CellLayoutDataFuncInvoker ()
		{
			if (__notify == null)
				return;
			__notify (__data);
		}

		internal CellLayoutDataFuncInvoker (CellLayoutDataFuncNative native_cb) : this (native_cb, IntPtr.Zero, null) {}

		internal CellLayoutDataFuncInvoker (CellLayoutDataFuncNative native_cb, IntPtr data) : this (native_cb, data, null) {}

		internal CellLayoutDataFuncInvoker (CellLayoutDataFuncNative native_cb, IntPtr data, GLib.DestroyNotify notify)
		{
			this.native_cb = native_cb;
			__data = data;
			__notify = notify;
		}

		internal Gtk.CellLayoutDataFunc Handler {
			get {
				return new Gtk.CellLayoutDataFunc(InvokeNative);
			}
		}

		void InvokeNative (Gtk.CellLayout cell_layout, Gtk.CellRenderer cell, Gtk.TreeModel tree_model, Gtk.TreeIter iter)
		{
			Gtk.Application.AssertMainThread();
			IntPtr native_iter = GLib.Marshaller.StructureToPtrAlloc<Gtk.TreeIter> (iter);
			native_cb (cell_layout == null ? IntPtr.Zero : cell_layout.Handle, cell == null ? IntPtr.Zero : cell.Handle, tree_model == null ? IntPtr.Zero : tree_model.Handle, native_iter, __data);
			Marshal.FreeHGlobal (native_iter);
		}
	}

	internal static class CellLayoutDataFuncWrapper {

		public static void NativeCallback (IntPtr cell_layout, IntPtr cell, IntPtr tree_model, IntPtr iter, IntPtr data)
		{
			try {
				var gch = (GCHandle)data;
				var managed = (Gtk.CellLayoutDataFunc)gch.Target;
				managed (Gtk.CellLayoutAdapter.GetObject (cell_layout, false), GLib.Object.GetObject(cell) as Gtk.CellRenderer, Gtk.TreeModelAdapter.GetObject (tree_model, false), Gtk.TreeIter.New (iter));
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}


		internal static readonly CellLayoutDataFuncNative NativeDelegate = new CellLayoutDataFuncNative (NativeCallback);
	}
#endregion
}
