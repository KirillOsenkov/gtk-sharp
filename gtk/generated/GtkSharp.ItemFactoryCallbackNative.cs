// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GtkSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate void ItemFactoryCallbackNative();

	internal class ItemFactoryCallbackInvoker {

		ItemFactoryCallbackNative native_cb;
		IntPtr __data;
		GLib.DestroyNotify __notify;

		~ItemFactoryCallbackInvoker ()
		{
			if (__notify == null)
				return;
			__notify (__data);
		}

		internal ItemFactoryCallbackInvoker (ItemFactoryCallbackNative native_cb) : this (native_cb, IntPtr.Zero, null) {}

		internal ItemFactoryCallbackInvoker (ItemFactoryCallbackNative native_cb, IntPtr data) : this (native_cb, data, null) {}

		internal ItemFactoryCallbackInvoker (ItemFactoryCallbackNative native_cb, IntPtr data, GLib.DestroyNotify notify)
		{
			this.native_cb = native_cb;
			__data = data;
			__notify = notify;
		}

		internal Gtk.ItemFactoryCallback Handler {
			get {
				return new Gtk.ItemFactoryCallback(InvokeNative);
			}
		}

		void InvokeNative ()
		{
			native_cb ();
		}
	}

	internal class ItemFactoryCallbackWrapper {

		public void NativeCallback ()
		{
			try {
				managed ();
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}


		internal readonly ItemFactoryCallbackNative NativeDelegate;
		Gtk.ItemFactoryCallback managed;

		public ItemFactoryCallbackWrapper (Gtk.ItemFactoryCallback managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new ItemFactoryCallbackNative (NativeCallback);
		}

	}
#endregion
}
