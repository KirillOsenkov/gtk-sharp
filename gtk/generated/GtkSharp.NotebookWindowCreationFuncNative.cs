// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GtkSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate IntPtr NotebookWindowCreationFuncNative(IntPtr source, IntPtr page, int x, int y, IntPtr data);

	internal static class NotebookWindowCreationFuncWrapper {

		public static IntPtr NativeCallback (IntPtr source, IntPtr page, int x, int y, IntPtr data)
		{
			try {
				var gch = (GCHandle)data;
				var managed = (Gtk.NotebookWindowCreationFunc)gch.Target;
				Gtk.Notebook __ret = managed (GLib.Object.GetObject(source) as Gtk.Notebook, GLib.Object.GetObject(page) as Gtk.Widget, x, y);
				return __ret == null ? IntPtr.Zero : __ret.Handle;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: Above call does not return.
				throw e;
			}
		}


		internal static readonly NotebookWindowCreationFuncNative NativeDelegate = new NotebookWindowCreationFuncNative (NativeCallback);
	}
#endregion
}
