// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GtkSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate void TreeCellDataFuncNative(IntPtr tree_column, IntPtr cell, IntPtr tree_model, IntPtr iter, IntPtr data);

	internal static class TreeCellDataFuncWrapper {

		public static void NativeCallback (IntPtr tree_column, IntPtr cell, IntPtr tree_model, IntPtr iter, IntPtr data)
		{
			try {
				var gch = (GCHandle)data;
				var managed = (Gtk.TreeCellDataFunc)gch.Target;
				managed (GLib.Object.GetObject(tree_column) as Gtk.TreeViewColumn, GLib.Object.GetObject(cell) as Gtk.CellRenderer, Gtk.TreeModelAdapter.GetObject (tree_model, false), Gtk.TreeIter.New (iter));
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}


		internal static readonly TreeCellDataFuncNative NativeDelegate = new TreeCellDataFuncNative (NativeCallback);
	}
#endregion
}
