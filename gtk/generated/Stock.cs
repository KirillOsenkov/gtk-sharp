// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[GLib.GTypeObject]
	public class Stock {

		public static string About {
			 get { return "gtk-about"; }
		}
		public static string Add {
			 get { return "gtk-add"; }
		}
		public static string Apply {
			 get { return "gtk-apply"; }
		}
		public static string Bold {
			 get { return "gtk-bold"; }
		}
		public static string Cancel {
			 get { return "gtk-cancel"; }
		}
		public static string Cdrom {
			 get { return "gtk-cdrom"; }
		}
		public static string Clear {
			 get { return "gtk-clear"; }
		}
		public static string Close {
			 get { return "gtk-close"; }
		}
		public static string ColorPicker {
			 get { return "gtk-color-picker"; }
		}
		public static string Connect {
			 get { return "gtk-connect"; }
		}
		public static string Convert {
			 get { return "gtk-convert"; }
		}
		public static string Copy {
			 get { return "gtk-copy"; }
		}
		public static string Cut {
			 get { return "gtk-cut"; }
		}
		public static string Delete {
			 get { return "gtk-delete"; }
		}
		public static string DialogAuthentication {
			 get { return "gtk-dialog-authentication"; }
		}
		public static string DialogError {
			 get { return "gtk-dialog-error"; }
		}
		public static string DialogInfo {
			 get { return "gtk-dialog-info"; }
		}
		public static string DialogQuestion {
			 get { return "gtk-dialog-question"; }
		}
		public static string DialogWarning {
			 get { return "gtk-dialog-warning"; }
		}
		public static string Directory {
			 get { return "gtk-directory"; }
		}
		public static string Discard {
			 get { return "gtk-discard"; }
		}
		public static string Disconnect {
			 get { return "gtk-disconnect"; }
		}
		public static string Dnd {
			 get { return "gtk-dnd"; }
		}
		public static string DndMultiple {
			 get { return "gtk-dnd-multiple"; }
		}
		public static string Edit {
			 get { return "gtk-edit"; }
		}
		public static string Execute {
			 get { return "gtk-execute"; }
		}
		public static string File {
			 get { return "gtk-file"; }
		}
		public static string Find {
			 get { return "gtk-find"; }
		}
		public static string FindAndReplace {
			 get { return "gtk-find-and-replace"; }
		}
		public static string Floppy {
			 get { return "gtk-floppy"; }
		}
		public static string Fullscreen {
			 get { return "gtk-fullscreen"; }
		}
		public static string GotoBottom {
			 get { return "gtk-goto-bottom"; }
		}
		public static string GotoFirst {
			 get { return "gtk-goto-first"; }
		}
		public static string GotoLast {
			 get { return "gtk-goto-last"; }
		}
		public static string GotoTop {
			 get { return "gtk-goto-top"; }
		}
		public static string GoBack {
			 get { return "gtk-go-back"; }
		}
		public static string GoDown {
			 get { return "gtk-go-down"; }
		}
		public static string GoForward {
			 get { return "gtk-go-forward"; }
		}
		public static string GoUp {
			 get { return "gtk-go-up"; }
		}
		public static string Harddisk {
			 get { return "gtk-harddisk"; }
		}
		public static string Help {
			 get { return "gtk-help"; }
		}
		public static string Home {
			 get { return "gtk-home"; }
		}
		public static string Indent {
			 get { return "gtk-indent"; }
		}
		public static string Index {
			 get { return "gtk-index"; }
		}
		public static string Info {
			 get { return "gtk-info"; }
		}
		public static string Italic {
			 get { return "gtk-italic"; }
		}
		public static string JumpTo {
			 get { return "gtk-jump-to"; }
		}
		public static string JustifyCenter {
			 get { return "gtk-justify-center"; }
		}
		public static string JustifyFill {
			 get { return "gtk-justify-fill"; }
		}
		public static string JustifyLeft {
			 get { return "gtk-justify-left"; }
		}
		public static string JustifyRight {
			 get { return "gtk-justify-right"; }
		}
		public static string LeaveFullscreen {
			 get { return "gtk-leave-fullscreen"; }
		}
		public static string MediaForward {
			 get { return "gtk-media-forward"; }
		}
		public static string MediaNext {
			 get { return "gtk-media-next"; }
		}
		public static string MediaPause {
			 get { return "gtk-media-pause"; }
		}
		public static string MediaPlay {
			 get { return "gtk-media-play"; }
		}
		public static string MediaPrevious {
			 get { return "gtk-media-previous"; }
		}
		public static string MediaRecord {
			 get { return "gtk-media-record"; }
		}
		public static string MediaRewind {
			 get { return "gtk-media-rewind"; }
		}
		public static string MediaStop {
			 get { return "gtk-media-stop"; }
		}
		public static string MissingImage {
			 get { return "gtk-missing-image"; }
		}
		public static string Network {
			 get { return "gtk-network"; }
		}
		public static string New {
			 get { return "gtk-new"; }
		}
		public static string No {
			 get { return "gtk-no"; }
		}
		public static string Ok {
			 get { return "gtk-ok"; }
		}
		public static string Open {
			 get { return "gtk-open"; }
		}
		public static string OrientationLandscape {
			 get { return "gtk-orientation-landscape"; }
		}
		public static string OrientationPortrait {
			 get { return "gtk-orientation-portrait"; }
		}
		public static string OrientationReverseLandscape {
			 get { return "gtk-orientation-reverse-landscape"; }
		}
		public static string OrientationReversePortrait {
			 get { return "gtk-orientation-reverse-portrait"; }
		}
		public static string Paste {
			 get { return "gtk-paste"; }
		}
		public static string Preferences {
			 get { return "gtk-preferences"; }
		}
		public static string Print {
			 get { return "gtk-print"; }
		}
		public static string PrintPreview {
			 get { return "gtk-print-preview"; }
		}
		public static string Properties {
			 get { return "gtk-properties"; }
		}
		public static string Quit {
			 get { return "gtk-quit"; }
		}
		public static string Redo {
			 get { return "gtk-redo"; }
		}
		public static string Refresh {
			 get { return "gtk-refresh"; }
		}
		public static string Remove {
			 get { return "gtk-remove"; }
		}
		public static string RevertToSaved {
			 get { return "gtk-revert-to-saved"; }
		}
		public static string Save {
			 get { return "gtk-save"; }
		}
		public static string SaveAs {
			 get { return "gtk-save-as"; }
		}
		public static string SelectAll {
			 get { return "gtk-select-all"; }
		}
		public static string SelectColor {
			 get { return "gtk-select-color"; }
		}
		public static string SelectFont {
			 get { return "gtk-select-font"; }
		}
		public static string SortAscending {
			 get { return "gtk-sort-ascending"; }
		}
		public static string SortDescending {
			 get { return "gtk-sort-descending"; }
		}
		public static string SpellCheck {
			 get { return "gtk-spell-check"; }
		}
		public static string Stop {
			 get { return "gtk-stop"; }
		}
		public static string Strikethrough {
			 get { return "gtk-strikethrough"; }
		}
		public static string Undelete {
			 get { return "gtk-undelete"; }
		}
		public static string Underline {
			 get { return "gtk-underline"; }
		}
		public static string Undo {
			 get { return "gtk-undo"; }
		}
		public static string Unindent {
			 get { return "gtk-unindent"; }
		}
		public static string Yes {
			 get { return "gtk-yes"; }
		}
		public static string Zoom100 {
			 get { return "gtk-zoom-100"; }
		}
		public static string ZoomFit {
			 get { return "gtk-zoom-fit"; }
		}
		public static string ZoomIn {
			 get { return "gtk-zoom-in"; }
		}
		public static string ZoomOut {
			 get { return "gtk-zoom-out"; }
		}
#endregion
#region Customized extensions
#line 1 "Stock.custom"
// Stock.custom - customizations to Gtk.Stock
//
// Authors: Mike Kestner  <mkestner@ximian.com>
//
// Copyright (c) 2004 Novell, Inc.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.


		[DllImport("libgtk-win32-2.0-0.dll", CallingConvention=CallingConvention.Cdecl)]
		static extern IntPtr gtk_stock_list_ids ();

		public static string[] ListIds ()
		{
			IntPtr raw_ret = gtk_stock_list_ids ();
			if (raw_ret == IntPtr.Zero)
				return Array.Empty<string> ();
			return GLib.Marshaller.ListPtrToArray<string> (raw_ret, typeof (GLib.SList), true, true);
		}

		[StructLayout(LayoutKind.Sequential)]
		struct ConstStockItem {
			public IntPtr StockId;
			public IntPtr Label;
			public Gdk.ModifierType Modifier;
			public uint Keyval;
			public IntPtr TranslationDomain;
		}

		[DllImport("libgtk-win32-2.0-0.dll", CallingConvention=CallingConvention.Cdecl)]
		static extern bool gtk_stock_lookup (IntPtr stock_id, out ConstStockItem item);

		public static Gtk.StockItem Lookup (string stock_id) {
			ConstStockItem const_item;

			IntPtr native_id = GLib.Marshaller.StringToPtrGStrdup (stock_id);
			bool result = gtk_stock_lookup (native_id, out const_item);
			GLib.Marshaller.Free (native_id);
			if (!result)
				return Gtk.StockItem.Zero;

			Gtk.StockItem item = new Gtk.StockItem ();
			item.StockId = GLib.Marshaller.Utf8PtrToString (const_item.StockId);
			item.Label = GLib.Marshaller.Utf8PtrToString (const_item.Label);
			item.Modifier = const_item.Modifier;
			item.Keyval = const_item.Keyval;
			item.TranslationDomain = GLib.Marshaller.Utf8PtrToString (const_item.TranslationDomain);
			return item;
		}


#endregion
	}
}
