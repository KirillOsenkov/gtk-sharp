// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GtkSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate bool TreeViewSearchEqualFuncNative(IntPtr model, int column, IntPtr key, IntPtr iter, IntPtr search_data);

	internal class TreeViewSearchEqualFuncInvoker {

		TreeViewSearchEqualFuncNative native_cb;
		IntPtr __data;
		GLib.DestroyNotify __notify;

		~TreeViewSearchEqualFuncInvoker ()
		{
			if (__notify == null)
				return;
			__notify (__data);
		}

		internal TreeViewSearchEqualFuncInvoker (TreeViewSearchEqualFuncNative native_cb) : this (native_cb, IntPtr.Zero, null) {}

		internal TreeViewSearchEqualFuncInvoker (TreeViewSearchEqualFuncNative native_cb, IntPtr data) : this (native_cb, data, null) {}

		internal TreeViewSearchEqualFuncInvoker (TreeViewSearchEqualFuncNative native_cb, IntPtr data, GLib.DestroyNotify notify)
		{
			this.native_cb = native_cb;
			__data = data;
			__notify = notify;
		}

		internal Gtk.TreeViewSearchEqualFunc Handler {
			get {
				return new Gtk.TreeViewSearchEqualFunc(InvokeNative);
			}
		}

		bool InvokeNative (Gtk.TreeModel model, int column, string key, Gtk.TreeIter iter)
		{
			Gtk.Application.AssertMainThread();
			IntPtr native_key = GLib.Marshaller.StringToPtrGStrdup (key);
			IntPtr native_iter = GLib.Marshaller.StructureToPtrAlloc<Gtk.TreeIter> (iter);
			bool result = native_cb (model == null ? IntPtr.Zero : model.Handle, column, native_key, native_iter, __data);
			GLib.Marshaller.Free (native_key);
			Marshal.FreeHGlobal (native_iter);
			return result;
		}
	}

	internal static class TreeViewSearchEqualFuncWrapper {

		public static bool NativeCallback (IntPtr model, int column, IntPtr key, IntPtr iter, IntPtr search_data)
		{
			try {
				var gch = (GCHandle)search_data;
				var managed = (Gtk.TreeViewSearchEqualFunc)gch.Target;
				bool __ret = managed (Gtk.TreeModelAdapter.GetObject (model, false), column, GLib.Marshaller.Utf8PtrToString (key), Gtk.TreeIter.New (iter));
				return __ret;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
				return false;
			}
		}


		internal static readonly TreeViewSearchEqualFuncNative NativeDelegate = new TreeViewSearchEqualFuncNative (NativeCallback);
	}
#endregion
}
