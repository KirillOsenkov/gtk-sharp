// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[TextChildAnchor]
	public class TextChildAnchor : GLib.Object {

		[Obsolete]
		protected TextChildAnchor(GLib.GType gtype) : base(gtype) {}
		public TextChildAnchor(IntPtr raw) : base(raw) {}

		[DllImport("libgtk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_text_child_anchor_new();

		public TextChildAnchor () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (TextChildAnchor)) {
				Gtk.Application.AssertMainThread();
				CreateNativeObject (Array.Empty<IntPtr> (), Array.Empty<GLib.Value> (), 0);
				return;
			}
			owned = true;
			Raw = gtk_text_child_anchor_new();
		}

		[DllImport("libgtk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gtk_text_child_anchor_get_deleted(IntPtr raw);

		public bool Deleted { 
			get {
				bool raw_ret = gtk_text_child_anchor_get_deleted(Handle);
				bool ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgtk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_text_child_anchor_get_type();

		static GLib.GType _gtype = new GLib.GType (gtk_text_child_anchor_get_type());
		public static new GLib.GType GType { 
			get {
								return _gtype;
			}
		}

#endregion
#region Customized extensions
#line 1 "TextChildAnchor.custom"
// TextChildAnchor.custom - customizations to Gtk.TextChildAnchor
//
// Authors: Mike Kestner  <mkestner@ximian.com>
//
// Copyright (c) 2004 Novell, Inc.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.


		[DllImport("libgtk-win32-2.0-0.dll", CallingConvention=CallingConvention.Cdecl)]
		static extern IntPtr gtk_text_child_anchor_get_widgets (IntPtr raw);

		public Widget[] Widgets {
			get {
				IntPtr raw_ret = gtk_text_child_anchor_get_widgets (Handle);
				if (raw_ret == IntPtr.Zero)
					return new Widget [0];
				return GLib.Marshaller.ListPtrToArray<Widget> (raw_ret, typeof (GLib.List), true, false);
			}
		}


#endregion
	}

	internal class TextChildAnchorAttribute : GLib.GTypeTypeAttribute {
		[DllImport ("libgtk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_text_child_anchor_get_type ();

		private static GLib.GType _gtype = new GLib.GType (gtk_text_child_anchor_get_type ());
		public static GLib.GType GType { get { return _gtype; } }
		public override GLib.GType Type { get { return _gtype; } }

	}
}
