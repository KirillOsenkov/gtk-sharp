// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;

#region Autogenerated code
	public interface Editable : GLib.IWrapper {

		event Gtk.TextInsertedHandler TextInserted;
		event Gtk.TextDeletedHandler TextDeleted;
		event System.EventHandler Changed;
		void CopyClipboard();
		void CutClipboard();
		void DeleteSelection();
		void DeleteText(int start_pos, int end_pos);
		string GetChars(int start_pos, int end_pos);
		bool IsEditable { 
			get; set;
		}
		int Position { 
			get; set;
		}
		bool GetSelectionBounds(out int start, out int end);
		void InsertText(string new_text, ref int position);
		void PasteClipboard();
		void SelectRegion(int start, int end);
	}

	[GLib.GInterface (typeof (EditableAdapter))]
	public interface EditableImplementor : GLib.IWrapper {

		void InsertText (string text, ref int position);
		void DeleteText (int start_pos, int end_pos);
		string GetChars (int start_pos, int end_pos);
		void SelectRegion (int start_pos, int end_pos);
		bool GetSelectionBounds (out int start_pos, out int end_pos);
		int Position { get; set; }
	}
#endregion
}
