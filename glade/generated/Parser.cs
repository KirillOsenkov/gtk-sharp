// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Glade {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Parser {

		[DllImport("libglade-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr glade_parser_parse_buffer(IntPtr buffer, int len, IntPtr domain);

		public static Glade.Interface ParseBuffer(string buffer, string domain) {
			IntPtr native_buffer = GLib.Marshaller.StringToPtrGStrdup (buffer);
			IntPtr native_domain = GLib.Marshaller.StringToPtrGStrdup (domain);
			IntPtr raw_ret = glade_parser_parse_buffer(native_buffer, System.Text.Encoding.UTF8.GetByteCount (buffer), native_domain);
			Glade.Interface ret = Glade.Interface.New (raw_ret);
			GLib.Marshaller.Free (native_buffer);
			GLib.Marshaller.Free (native_domain);
			return ret;
		}

		[DllImport("libglade-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr glade_parser_parse_file(IntPtr file, IntPtr domain);

		public static Glade.Interface ParseFile(string file, string domain) {
			IntPtr native_file = GLib.Marshaller.StringToPtrGStrdup (file);
			IntPtr native_domain = GLib.Marshaller.StringToPtrGStrdup (domain);
			IntPtr raw_ret = glade_parser_parse_file(native_file, native_domain);
			Glade.Interface ret = Glade.Interface.New (raw_ret);
			GLib.Marshaller.Free (native_file);
			GLib.Marshaller.Free (native_domain);
			return ret;
		}

#endregion
	}
}
