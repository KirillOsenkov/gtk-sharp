// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GladeSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate IntPtr XMLCustomWidgetHandlerNative(IntPtr xml, IntPtr func_name, IntPtr name, IntPtr string1, IntPtr string2, int int1, int int2, IntPtr user_data);

	internal static class XMLCustomWidgetHandlerWrapper {

		public static IntPtr NativeCallback (IntPtr xml, IntPtr func_name, IntPtr name, IntPtr string1, IntPtr string2, int int1, int int2, IntPtr user_data)
		{
			try {
				var gch = (GCHandle)user_data;
				var managed = (Glade.XMLCustomWidgetHandler)gch.Target;
				Gtk.Widget __ret = managed (GLib.Object.GetObject(xml) as Glade.XML, GLib.Marshaller.Utf8PtrToString (func_name), GLib.Marshaller.Utf8PtrToString (name), GLib.Marshaller.Utf8PtrToString (string1), GLib.Marshaller.Utf8PtrToString (string2), int1, int2);
				return __ret == null ? IntPtr.Zero : __ret.Handle;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: Above call does not return.
				throw e;
			}
		}


		internal static readonly XMLCustomWidgetHandlerNative NativeDelegate = new XMLCustomWidgetHandlerNative (NativeCallback);
	}
#endregion
}
