// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GladeSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate IntPtr FindInternalChildFuncNative(IntPtr xml, IntPtr parent, IntPtr childname);

	internal class FindInternalChildFuncWrapper {

		public IntPtr NativeCallback (IntPtr xml, IntPtr parent, IntPtr childname)
		{
			try {
				Gtk.Widget __ret = managed (GLib.Object.GetObject(xml) as Glade.XML, GLib.Object.GetObject(parent) as Gtk.Widget, GLib.Marshaller.Utf8PtrToString (childname));
				return __ret == null ? IntPtr.Zero : __ret.Handle;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: Above call does not return.
				throw e;
			}
		}


		internal readonly FindInternalChildFuncNative NativeDelegate;
		Glade.FindInternalChildFunc managed;

		public FindInternalChildFuncWrapper (Glade.FindInternalChildFunc managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new FindInternalChildFuncNative (NativeCallback);
		}

	}
#endregion
}
