// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gdk {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	[GLib.GTypeStruct]
	public struct WindowAttr {

		public string Title;
		public int EventMask;
		public int X;
		public int Y;
		public int Width;
		public int Height;
		public Gdk.WindowClass Wclass;
		private IntPtr _visual;
		public Gdk.Visual Visual {
			get {
				return GLib.Object.GetObject(_visual) as Gdk.Visual;
			}
			set {
				_visual = value == null ? IntPtr.Zero : value.Handle;
			}
		}
		private IntPtr _colormap;
		public Gdk.Colormap Colormap {
			get {
				return GLib.Object.GetObject(_colormap) as Gdk.Colormap;
			}
			set {
				_colormap = value == null ? IntPtr.Zero : value.Handle;
			}
		}
		public Gdk.WindowType WindowType;
		private IntPtr _cursor;
		public Gdk.Cursor Cursor {
			get {
				return _cursor == IntPtr.Zero ? null : (Gdk.Cursor) GLib.Opaque.GetOpaque (_cursor, typeof (Gdk.Cursor), false);
			}
			set {
				_cursor = value == null ? IntPtr.Zero : value.Handle;
			}
		}
		public string WmclassName;
		public string WmclassClass;
		public bool OverrideRedirect;
		public Gdk.WindowTypeHint TypeHint;

		public static Gdk.WindowAttr Zero = new Gdk.WindowAttr ();

		public static Gdk.WindowAttr New (IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gdk.WindowAttr.Zero;
			return Marshal.PtrToStructure<Gdk.WindowAttr> (raw);
		}

#endregion
#region Customized extensions
#line 1 "WindowAttr.custom"
// Gdk.WindowAttr.custom - Gdk Window class customizations
//
// Author: Mike Kestner <mkestner@novell.com>
//
// Copyright (c) 2004 Novell, Inc.
//
// This code is inserted after the automatically generated code.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.

		public EventMask Mask {
			get {
				return (EventMask) EventMask;
			}
			set {
				EventMask = (int) value;
			}
		}

		[Obsolete ("Replaced by Visual property.")]
		public Gdk.Visual visual {
			get { 
				Gdk.Visual ret = (Gdk.Visual) GLib.Object.GetObject(_visual);
				return ret;
			}
			set { _visual = value.Handle; }
		}

		[Obsolete ("Replaced by Colormap property.")]
		public Gdk.Colormap colormap {
			get { 
				Gdk.Colormap ret = (Gdk.Colormap) GLib.Object.GetObject(_colormap);
				return ret;
			}
			set { _colormap = value.Handle; }
		}

		[Obsolete ("Replaced by Cursor property.")]
		public Gdk.Cursor cursor {
			get { 
				Gdk.Cursor ret = new Gdk.Cursor(_cursor);
				if (ret == null) ret = new Gdk.Cursor(_cursor);
				return ret;
			}
			set { _cursor = value.Handle; }
		}


#endregion
	}
}
