// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gdk {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	[GLib.GTypeStruct]
	public struct GCValues {

		public Gdk.Color Foreground;
		public Gdk.Color Background;
		private IntPtr _font;

		public Gdk.Font font {
			get { return Gdk.Font.New (_font); }
		}
		public Gdk.Function Function;
		public Gdk.Fill Fill;
		private IntPtr _tile;
		public Gdk.Pixmap Tile {
			get {
				return GLib.Object.GetObject(_tile) as Gdk.Pixmap;
			}
			set {
				_tile = value == null ? IntPtr.Zero : value.Handle;
			}
		}
		private IntPtr _stipple;
		public Gdk.Pixmap Stipple {
			get {
				return GLib.Object.GetObject(_stipple) as Gdk.Pixmap;
			}
			set {
				_stipple = value == null ? IntPtr.Zero : value.Handle;
			}
		}
		private IntPtr _clip_mask;
		public Gdk.Pixmap ClipMask {
			get {
				return GLib.Object.GetObject(_clip_mask) as Gdk.Pixmap;
			}
			set {
				_clip_mask = value == null ? IntPtr.Zero : value.Handle;
			}
		}
		public Gdk.SubwindowMode SubwindowMode;
		public int TsXOrigin;
		public int TsYOrigin;
		public int ClipXOrigin;
		public int ClipYOrigin;
		public int GraphicsExposures;
		public int LineWidth;
		public Gdk.LineStyle LineStyle;
		public Gdk.CapStyle CapStyle;
		public Gdk.JoinStyle JoinStyle;

		public static Gdk.GCValues Zero = new Gdk.GCValues ();

		public static Gdk.GCValues New (IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gdk.GCValues.Zero;
			unsafe { return *(Gdk.GCValues*)raw; }
		}

#endregion
#region Customized extensions
#line 1 "GCValues.custom"
// Gdk.GCValues.custom - Gdk GCValues class customizations
//
// Author:   Mike Kestner <mkestner@novell.com>
//
// Copyright (c) 2005 Novell, Inc.
//
// This code is inserted after the automatically generated code.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.


		[Obsolete ("Replaced by Tile property.")]
		public Gdk.Pixmap tile {
			get { 
				Gdk.Pixmap ret = (Gdk.Pixmap) GLib.Object.GetObject(_tile);
				return ret;
			}
			set { _tile = value.Handle; }
		}

		[Obsolete ("Replaced by Stipple property.")]
		public Gdk.Pixmap stipple {
			get { 
				Gdk.Pixmap ret = (Gdk.Pixmap) GLib.Object.GetObject(_stipple);
				return ret;
			}
			set { _stipple = value.Handle; }
		}

		[Obsolete ("Replaced by ClipMask property.")]
		public Gdk.Pixmap clip_mask {
			get { 
				Gdk.Pixmap ret = (Gdk.Pixmap) GLib.Object.GetObject(_clip_mask);
				return ret;
			}
			set { _clip_mask = value.Handle; }
		}


#endregion
	}
}
