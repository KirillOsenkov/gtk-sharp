// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gdk {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Char {

		[DllImport("libgdk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern int gdk_char_height(ref Gdk.Font font, byte character);

		[Obsolete]
		public static int Height(Gdk.Font font, byte character) {
			int raw_ret = gdk_char_height(ref font, character);
			int ret = raw_ret;
			return ret;
		}

		[DllImport("libgdk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern int gdk_char_measure(ref Gdk.Font font, byte character);

		[Obsolete]
		public static int Measure(Gdk.Font font, byte character) {
			int raw_ret = gdk_char_measure(ref font, character);
			int ret = raw_ret;
			return ret;
		}

		[DllImport("libgdk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern int gdk_char_width(ref Gdk.Font font, byte character);

		[Obsolete]
		public static int Width(Gdk.Font font, byte character) {
			int raw_ret = gdk_char_width(ref font, character);
			int ret = raw_ret;
			return ret;
		}

		[DllImport("libgdk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern int gdk_char_width_wc(ref Gdk.Font font, uint character);

		[Obsolete]
		public static int WidthWc(Gdk.Font font, uint character) {
			int raw_ret = gdk_char_width_wc(ref font, character);
			int ret = raw_ret;
			return ret;
		}

#endregion
	}
}
