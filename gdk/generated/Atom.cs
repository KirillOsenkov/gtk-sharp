// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gdk {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[GLib.GTypeOpaque]
	public class Atom : GLib.Opaque {

		[DllImport("libgdk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gdk_atom_intern(IntPtr atom_name, bool only_if_exists);

		public static Gdk.Atom Intern(string atom_name, bool only_if_exists) {
			IntPtr native_atom_name = GLib.Marshaller.StringToPtrGStrdup (atom_name);
			IntPtr raw_ret = gdk_atom_intern(native_atom_name, only_if_exists);
			Gdk.Atom ret = raw_ret == IntPtr.Zero ? null : (Gdk.Atom) GLib.Opaque.GetOpaque (raw_ret, typeof (Gdk.Atom), false);
			GLib.Marshaller.Free (native_atom_name);
			return ret;
		}

		[DllImport("libgdk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gdk_atom_name(IntPtr raw);

		public string Name { 
			get {
				IntPtr raw_ret = gdk_atom_name(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
		}

		public Atom(IntPtr raw) : base(raw) {}

#endregion
#region Customized extensions
#line 1 "Atom.custom"
// Atom.custom
// 
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.

public static implicit operator string (Gdk.Atom atom)
{
	return atom.Name;
}


#endregion
	}
}
