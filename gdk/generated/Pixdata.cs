// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gdk {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	[GLib.GTypeStruct]
	public struct Pixdata {

		public uint Magic;
		public int Length;
		public uint PixdataType;
		public uint Rowstride;
		public uint Width;
		public uint Height;
		private IntPtr _pixel_data;

		public static Gdk.Pixdata Zero = new Gdk.Pixdata ();

		public static Gdk.Pixdata New (IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gdk.Pixdata.Zero;
			unsafe { return *(Gdk.Pixdata*)raw; }
		}

		[DllImport("libgdk_pixbuf-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern unsafe bool gdk_pixdata_deserialize(ref Gdk.Pixdata raw, uint stream_length, byte[] stream, out IntPtr error);

		public unsafe bool Deserialize(uint stream_length, byte[] stream) {
			IntPtr error = IntPtr.Zero;
			bool raw_ret = gdk_pixdata_deserialize(ref this, stream_length, stream, out error);
			bool ret = raw_ret;
			if (error != IntPtr.Zero) throw new GLib.GException (error);
			return ret;
		}

		[DllImport("libgdk_pixbuf-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gdk_pixdata_from_pixbuf(ref Gdk.Pixdata raw, IntPtr pixbuf, bool use_rle);

		public IntPtr FromPixbuf(Gdk.Pixbuf pixbuf, bool use_rle) {
			IntPtr raw_ret = gdk_pixdata_from_pixbuf(ref this, pixbuf == null ? IntPtr.Zero : pixbuf.Handle, use_rle);
			IntPtr ret = raw_ret;
			return ret;
		}

#endregion
#region Customized extensions
#line 1 "Pixdata.custom"
// Pixdata.Custom 
//
// Copyright (c) 2004 Novell, Inc.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.

	[DllImport("libgdk_pixbuf-2.0-0.dll", CallingConvention=CallingConvention.Cdecl)]
	static extern IntPtr gdk_pixdata_serialize (ref Gdk.Pixdata raw, out uint len);
	
	public byte [] Serialize () {
		uint len;
		IntPtr raw_ret = gdk_pixdata_serialize (ref this, out len);

		byte [] data = new byte [len];
		Marshal.Copy (raw_ret, data, 0, (int)len);
		GLib.Marshaller.Free (raw_ret);
		return data;
	}	

#endregion
	}
}
